{
  "path": "some/path/withWildcard/*/orReplacement/:replaceOnKey/:replace/:namedWildCardCanBeUseForDocumentation",
  "method": "GET",
  "lookup": {
    "header": {
      "headerKey": "valueAsString MUST be present to match"
    },
    "path": {
      ":replaceOnKey": "matchOnlyWithThisString",
      ":replace": "Named :path componenet not in path dictionary, act the same as * wildcard"
    },
    "query": {
      "queryKey": "valueAsString MUST be present to match",
      "other": "query items not present in the query dictionary are ignored"
    }
  },
  "response": {
    "headers": {
      "rule": "All key value pairs in headers dictionary will be added to the response headers",
      "Content-Type": "Can be specified, if not will be infered base on response.body",
      "Set-Cookie": "Cookie1=1; Domain=cookie1; Secure; HttpOnly"
    },
    "body": "text/plain and application/json are supported formats. For JSON use a JSON object or array instead of a string here"
  }
}
